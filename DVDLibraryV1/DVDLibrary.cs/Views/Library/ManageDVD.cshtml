@model DVDLibrary.ViewModel.DVDListVM

@{
    ViewBag.Title = "ManageDVD";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>DVD Manager</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal text-primary">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.dvd.DvdId)

        <div class="form-group">
            @Html.LabelFor(model => model.dvd.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dvd.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.dvd.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dvd.ReleaseYear, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dvd.ReleaseYear, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.dvd.ReleaseYear, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dvd.DirectorName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dvd.DirectorName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.dvd.DirectorName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dvd.Studio, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dvd.Studio, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.dvd.Studio, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dvd.UserRating, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dvd.UserRating, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.dvd.UserRating, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dvd.UserNotes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dvd.UserNotes, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.dvd.UserNotes, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dvd.MPAARating, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.dvd.MPAARating)
                @Html.ValidationMessageFor(model => model.dvd.MPAARating, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dvd.ActorList, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @foreach (var actor in Model.dvd.ActorList)
                {
                    @Html.TextBoxFor(m => actor, new { @readonly = true })
                    <br />
                }

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dvd.CurrentBorrower, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (Model.dvd.CurrentBorrower != null)
                {
                    @Html.TextBoxFor(model => model.dvd.CurrentBorrower, new { @readonly = true })
                }
                else
                { <p>Movie currently in stock.</p>}
                @Html.ValidationMessageFor(model => model.dvd.CurrentBorrower, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" />

                @Html.ActionLink("Delete", "DeleteDVD", "Library", new { DvdId = Model.dvd.DvdId }, new { @class = "btn btn-danger" })


                @Html.ActionLink("Cancel", "Collection", "Library", null, new { @class = "btn btn-info" })
            </div>
        </div>
    </div>
}
